import type { NextPage } from 'next';
import { PropsWithChildren ,  useEffect } from 'react';
import { useWindowSize } from 'usehooks-ts'
import Image from 'next/image';
import Head from 'next/head';
import styles from '../styles/Home.module.scss';
import { eventUrl } from '../utils/utils';
import { IInitData } from '../types/Types';
import Slider, { SliderItem } from '../components/Slider/Slider';

type PageProps = PropsWithChildren<{ data: IInitData }>

const Home : NextPage<PageProps> = ({ data }) => {
  var EventSource = require("eventsource");
  const { width } = useWindowSize();
  useEffect(() => {
    fetch(eventUrl, {
      method: 'GET', // *GET, POST, PUT, DELETE, etc.
      mode: 'cors', // no-cors, *cors, same-origin
      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
      credentials: 'same-origin', // include, *same-origin, omit
      headers: {
        'Content-Type': 'application/json'
      },
    });

    const sseSource = new EventSource(eventUrl);

    sseSource.addEventListener('open', () => {
      console.log('SSE opened!');
    });

    sseSource.addEventListener('message', (e : any) => {
      console.log('message', e.data );
    });

    sseSource.addEventListener('error', (e : any) => {
      console.error('Error: ',  e);
    });
    return () => {
      sseSource.close();
    };
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.content}>
        <Slider
          width={width}
          >
          {data.images.map((p: string) => <SliderItem
            key={p}
            children={<Image src={p} layout="fill" objectFit='cover' priority />}
            width={width}
            />
          )}
        </Slider>
      </div>
    </div>
  )
};

export async function getStaticProps() {
  // Call an external API endpoint to get posts.
  // You can use any data fetching library
  const res = await fetch('http://localhost:3000/api/init');
  const data : IInitData = await res.json();
  // By returning { props: { posts } }, the Blog component
  // will receive `posts` as a prop at build time
  return {
    props: {
      data,
    },
  }
}

export default Home;
